<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" ignored="1" total="18" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Loan Department" duration-ms="86" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
    <groups>
      <group name="Smoke">
        <method signature="PracticeFour.smokeTestHomeLoan()[pri:0, instance:com.HomeLoan.PracticeFour@2bbf4b8b]" name="smokeTestHomeLoan" class="com.HomeLoan.PracticeFour"/>
        <method signature="PracticeOne.smokeTestPLoan1()[pri:0, instance:com.PersonalLoan.PracticeOne@305fd85d]" name="smokeTestPLoan1" class="com.PersonalLoan.PracticeOne"/>
        <method signature="PracticeTwo.smokeTestPLoan2()[pri:0, instance:com.PersonalLoan.PracticeTwo@ea1a8d5]" name="smokeTestPLoan2" class="com.PersonalLoan.PracticeTwo"/>
        <method signature="PracticeThree.smokeTestCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="smokeTestCarLoan" class="com.CarLoan.PracticeThree"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="PersonalLoan" duration-ms="38" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
      <class name="com.HomeLoan.PracticeFour">
        <test-method status="PASS" signature="apiLoginHomeLoan()[pri:0, instance:com.HomeLoan.PracticeFour@2bbf4b8b]" name="apiLoginHomeLoan" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiLoginHomeLoan -->
        <test-method status="PASS" signature="mobileLoginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:com.HomeLoan.PracticeFour@2bbf4b8b]" name="mobileLoginHomeLoan" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.globalapi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G L O B A L]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method status="PASS" signature="smokeTestHomeLoan()[pri:0, instance:com.HomeLoan.PracticeFour@2bbf4b8b]" name="smokeTestHomeLoan" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTestHomeLoan -->
      </class> <!-- com.HomeLoan.PracticeFour -->
      <class name="com.PersonalLoan.PracticeOne">
        <test-method status="PASS" signature="Demo()[pri:0, instance:com.PersonalLoan.PracticeOne@305fd85d]" name="Demo" duration-ms="4" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="secondTest()[pri:0, instance:com.PersonalLoan.PracticeOne@305fd85d]" name="secondTest" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method status="PASS" signature="smokeTestPLoan1()[pri:0, instance:com.PersonalLoan.PracticeOne@305fd85d]" name="smokeTestPLoan1" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTestPLoan1 -->
        <test-method status="PASS" signature="afterTestPLoan()[pri:0, instance:com.PersonalLoan.PracticeOne@305fd85d]" name="afterTestPLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestPLoan -->
      </class> <!-- com.PersonalLoan.PracticeOne -->
      <class name="com.PersonalLoan.PracticeTwo">
        <test-method status="PASS" signature="beforeTestPLoan()[pri:0, instance:com.PersonalLoan.PracticeTwo@ea1a8d5]" name="beforeTestPLoan" is-config="true" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestPLoan -->
        <test-method status="PASS" signature="pLoan()[pri:0, instance:com.PersonalLoan.PracticeTwo@ea1a8d5]" name="pLoan" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pLoan -->
        <test-method status="PASS" signature="smokeTestPLoan2()[pri:0, instance:com.PersonalLoan.PracticeTwo@ea1a8d5]" name="smokeTestPLoan2" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTestPLoan2 -->
      </class> <!-- com.PersonalLoan.PracticeTwo -->
    </test> <!-- PersonalLoan -->
    <test name="Car Loan" duration-ms="28" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
      <class name="com.PersonalLoan.PracticeOne">
        <test-method status="PASS" signature="beforeSuiteTest()[pri:0, instance:com.PersonalLoan.PracticeOne@305fd85d]" name="beforeSuiteTest" is-config="true" duration-ms="6" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteTest -->
      </class> <!-- com.PersonalLoan.PracticeOne -->
      <class name="com.CarLoan.PracticeThree">
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="PASS" signature="beforeClassTest()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeClassTest" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassTest -->
        <test-method status="FAIL" signature="mobileLoginCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="mobileLoginCarLoan" duration-ms="2" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.CarLoan.PracticeThree.mobileLoginCarLoan(PracticeThree.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="PASS" signature="mobileLogoutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="mobileLogoutCarLoan" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.carapi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[G L O B A L]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLogoutCarLoan -->
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="PASS" signature="mobileNavigationCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="mobileNavigationCarLoan" duration-ms="6" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNavigationCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="FAIL" signature="smokeTestCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="smokeTestCarLoan" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.CarLoan.PracticeThree.smokeTestCarLoan(PracticeThree.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTestCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="PASS" signature="CarLoanDataProviderTest(java.lang.String,java.lang.String)[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="CarLoanDataProviderTest" duration-ms="1" started-at="2021-06-13T22:13:42 IST" data-provider="TestData" finished-at="2021-06-13T22:13:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[username1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarLoanDataProviderTest -->
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="PASS" signature="CarLoanDataProviderTest(java.lang.String,java.lang.String)[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="CarLoanDataProviderTest" duration-ms="1" started-at="2021-06-13T22:13:42 IST" data-provider="TestData" finished-at="2021-06-13T22:13:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[username2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarLoanDataProviderTest -->
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="PASS" signature="CarLoanDataProviderTest(java.lang.String,java.lang.String)[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="CarLoanDataProviderTest" duration-ms="0" started-at="2021-06-13T22:13:42 IST" data-provider="TestData" finished-at="2021-06-13T22:13:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[username3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarLoanDataProviderTest -->
        <test-method status="PASS" signature="webLoginCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="webLoginCarLoan" duration-ms="1" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method status="PASS" signature="beforeMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="beforeMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="PASS" signature="afterMethodCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="afterMethodCarLoan" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodCarLoan -->
        <test-method status="SKIP" signature="apiLoginCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a]" name="apiLoginCarLoan" duration-ms="0" started-at="2021-06-13T22:13:42 IST" depends-on-methods="com.CarLoan.PracticeThree.mobileLoginCarLoan" finished-at="2021-06-13T22:13:42 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PracticeThree.apiLoginCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PracticeThree.apiLoginCarLoan()[pri:0, instance:com.CarLoan.PracticeThree@1500955a] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiLoginCarLoan -->
      </class> <!-- com.CarLoan.PracticeThree -->
      <class name="com.PersonalLoan.PracticeTwo">
        <test-method status="PASS" signature="afterSuiteTest()[pri:0, instance:com.PersonalLoan.PracticeTwo@ea1a8d5]" name="afterSuiteTest" is-config="true" duration-ms="0" started-at="2021-06-13T22:13:42 IST" finished-at="2021-06-13T22:13:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteTest -->
      </class> <!-- com.PersonalLoan.PracticeTwo -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
